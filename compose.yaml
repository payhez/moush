version: '3.8'

services:
  mongo1:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27017:27017"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - mongo-net
    volumes:
      - mongo1-data:/data/db

  mongo2:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - "27018:27018"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mongo-net
    volumes:
      - mongo2-data:/data/db

  mongo3:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    ports:
      - "27019:27019"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mongo-net
    volumes:
      - mongo3-data:/data/db

networks:
  mongo-net:
    driver: bridge

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
